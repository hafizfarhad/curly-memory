# sort output.txt | uniq -c | sort -nr
# The output of the above command gives us the frequency of each hash

#  73 1d7f9c35db0de384a66f7679280e1212593494f6
#  60 81df3125d93bb3040a800cb8481be4c9d120c248
#  38 c8f29bf9093943ab3bb37e026643a900b2134a14
#  33 85fc3a12652e39212f989c7d34199f9f26eb62c9
#  30 a4ea707cba252f60493a05868e1a6d65953a7b6c
#  28 ceff3989e8a21c0fa969afb3030364fe3692a1f6
#  28 b08b7b0a1221ddd87f33f4944458419b1984fdf4
#  27 6f212e53e05d3d86af980bea4a766eb602de30a8
#  24 a34d7153100d2ebb7f85b20d678a2020399f627c
#  19 c612aa03807cab52101c2a8c005ceabab8cab4d4
#  19 31667ada45a3aa7fd9f42670037cc0721521f3ac
#  17 8e810196d3fae13dccf1322c6e5b92b63b3655d3
#  16 ccf526cda3fa4a7ec847864523159cef4ce02eaa
#  15 bba685ff45eec7466b387337b3d3818dd5ef2be8
#  15 5111908c87f0dbf54dfe8b77b1f590807e0e0de3
#  12 fd8dc607481311c11c2a396e41fbb9dc416934b3
#  12 9ac9290ec6824f1de8fbe27d96489d5de3643830
#   8 e60bc7ae6293f967fa78a56734b81757b8df03ce
#   7 1bb6dde8734f27fed65e7350ed991918f488af1b
#   6 ef968d105d1ff2e4859b6385fdb6059e61a47b3c
#   5 878e55efc9f46c08e4e0af20579f064ea0e8d844
#   2 fe1fd3a9f2085176bb9f06b4795f11e45230aae2
#   2 e3f860045017632fdeba2c6d0f82b7982f3a11d6
#   2 92a6f2b170e645b243ec698414ac68c2f74faf5f
#   2 8ee2ae058955c880c8d8e03e66852b15a4627a8f
#   2 53e5c35858b48e2b5ee9d4e9764fbe247c1415f0
#   1 d8ea721bc294a55a0be7b41415a93f328f16990e
#   1 91fa46913b59af50174e4e2b16248612d7a2f78d
#   1 4708a976aecdeb5386c4869b7e4d1f52a862e801



# Mapping manually based on patterns observed in the initial decoding

hash_to_char = {
    '9ac9290ec6824f1de8fbe27d96489d5de3643830': 'F',  # First letter and appears in "FLAG"
    '6f212e53e05d3d86af980bea4a766eb602de30a8': 'R',  # Common letter in "FREQUENCY"
    '81df3125d93bb3040a800cb8481be4c9d120c248': 'E',  # Most common letter in English
    'ef968d105d1ff2e4859b6385fdb6059e61a47b3c': 'Q',  # Part of "FREQUENCY"
    'ccf526cda3fa4a7ec847864523159cef4ce02eaa': 'U',  # Part of "FREQUENCY"
    'a4ea707cba252f60493a05868e1a6d65953a7b6c': 'N',  # Common letter
    'a34d7153100d2ebb7f85b20d678a2020399f627c': 'C',  # Part of "FREQUENCY"
    'fd8dc607481311c11c2a396e41fbb9dc416934b3': 'Y',  # End of "FREQUENCY"
    '1d7f9c35db0de384a66f7679280e1212593494f6': ' ',  # Most common character (space)
    'b08b7b0a1221ddd87f33f4944458419b1984fdf4': 'A',  # Common letter
    'ceff3989e8a21c0fa969afb3030364fe3692a1f6': 'S',  # Common letter
    '8e810196d3fae13dccf1322c6e5b92b63b3655d3': 'L',  # Part of "LETTERS"
    'c8f29bf9093943ab3bb37e026643a900b2134a14': 'T',  # Common letter
    '85fc3a12652e39212f989c7d34199f9f26eb62c9': 'I',  # Common letter
    '31667ada45a3aa7fd9f42670037cc0721521f3ac': 'H',  # Appears in "CIPHER"
    'c612aa03807cab52101c2a8c005ceabab8cab4d4': 'O',  # Common letter
    'bba685ff45eec7466b387337b3d3818dd5ef2be8': 'G',  # Context suggests this
    '5111908c87f0dbf54dfe8b77b1f590807e0e0de3': 'P',  # Common letter
    'e60bc7ae6293f967fa78a56734b81757b8df03ce': 'D',  # Context suggests this
    '1bb6dde8734f27fed65e7350ed991918f488af1b': 'M',  # Context suggests this
    'ef968d105d1ff2e4859b6385fdb6059e61a47b3c': 'Q',  # Context suggests this
    '878e55efc9f46c08e4e0af20579f064ea0e8d844': 'B',  # Context suggests this
    'fe1fd3a9f2085176bb9f06b4795f11e45230aae2': 'W',  # Less common letter
    'e3f860045017632fdeba2c6d0f82b7982f3a11d6': 'X',  # Context suggests this
    '92a6f2b170e645b243ec698414ac68c2f74faf5f': 'K',  # Less common letter
    '8ee2ae058955c880c8d8e03e66852b15a4627a8f': 'V',  # Less common letter
    '53e5c35858b48e2b5ee9d4e9764fbe247c1415f0': 'Z',  # Less common letter
    'd8ea721bc294a55a0be7b41415a93f328f16990e': '{',  # Should be in flag
    '91fa46913b59af50174e4e2b16248612d7a2f78d': '}',  # Should be in flag
    '4708a976aecdeb5386c4869b7e4d1f52a862e801': '_',  # Should be in flag
}

# Read output.txt file
with open("output.txt", "r") as f:
    hashes = [line.strip() for line in f]

# Decode the message with our updated mapping
decoded = ""
for h in hashes:
    if h in hash_to_char:
        decoded += hash_to_char[h]
    else:
        decoded += "?"

print("\nUpdated decoded message:")
print(decoded)
