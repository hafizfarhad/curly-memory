import binascii

cipher_hex = "96ae4b57cd2cc0b07544de67afb65845813cafa45800db0b9cf319439729"
cipher_bytes = bytes.fromhex(cipher_hex)

# Known plaintext: flag{ (5 bytes)
known_pt = b"flag{"
known_ct = cipher_bytes[:5]

# Derive the first 5 bytes of the key
key_partial = bytes([c ^ p for c, p in zip(known_ct, known_pt)])

# Brute-force the 6th byte of the key (last unknown byte)
for last_byte in range(256):
    key = key_partial + bytes([last_byte])
    decrypted = bytes([b ^ key[i % len(key)] for i, b in enumerate(cipher_bytes)])
    try:
        decoded = decrypted.decode()
        if decoded.startswith("flag{") and decoded.endswith("}"):
            print("Key found:", key.hex())
            print("Decrypted flag:", decoded)
            break
    except:
        continue
